from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

from config import asession
from tables import UsersTable
from menu import main_menu

profile = Router()


class ProfileChange(StatesGroup):
    nick = State()
    club = State()
    pfp = State()


@profile.callback_query(F.data == "profile_show")
async def profile_show(callback: CallbackQuery):
    await callback.answer()
    markup = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìå–ú–µ–Ω—é", callback_data="menu")],
        [InlineKeyboardButton(text="üìù–ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å", callback_data="profile_change")]
    ])
    async with asession() as session:
        profile_info = await session.get(UsersTable, callback.from_user.id)
    if profile_info.pfp:
        await callback.message.answer_photo(profile_info.pfp,
                                            f"üôç‚Äç‚ôÇÔ∏è–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\n\n–ù–∏–∫: {profile_info.nick}\n–ö–ª—É–±: {profile_info.club}",
                                            reply_markup=markup)
    else:
        await callback.message.answer(f"üôç‚Äç‚ôÇÔ∏è–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\n\n–ù–∏–∫: {profile_info.nick}\n–ö–ª—É–±: {profile_info.club}",
                                      reply_markup=markup)


@profile.callback_query(F.data == "profile_change")
async def profile_change_choose(callback: CallbackQuery):
    await callback.answer()
    markup = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="–ù–∏–∫", callback_data="profile_change_nick"),
            InlineKeyboardButton(text="–ö–ª—É–±", callback_data="profile_change_club"),
            InlineKeyboardButton(text="–ö–∞—Ä—Ç–∏–Ω–∫–∞", callback_data="profile_change_pfp")
        ],
        [
            InlineKeyboardButton(text="üìå–ú–µ–Ω—é", callback_data="menu")
        ]])
    await callback.message.answer("–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å:", reply_markup=markup)


@profile.callback_query(F.data[:15] == "profile_change_")
async def profile_change(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    if callback.data[15:] == "nick":
        await callback.message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –Ω–∏–∫")
        await state.set_state(ProfileChange.nick)
    elif callback.data[15:] == "club":
        markup = ReplyKeyboardMarkup(keyboard=[
            [
                KeyboardButton(text="TechnoMafia"),
                KeyboardButton(text="–ß–µ—Ä–Ω—ã–π —Ö–æ–¥"),
                KeyboardButton(text="BONCHMAFIA")
            ],
            [
                KeyboardButton(text="Mining Mafia"),
                KeyboardButton(text="Polytech mafia community"),
                KeyboardButton(text="–í–µ—á–µ—Ä–Ω—è—è –ø–∞—Ä—Ç–∏—è")
            ],
            [
                KeyboardButton(text="PolemicaSPb"),
                KeyboardButton(text="–ò–ª–ª—éz–∏—è –û–±–º–∞N–∞"),
                KeyboardButton(text="TITAN SPb"),
                KeyboardButton(text="FoxMafia")
            ]
        ], resize_keyboard=True, one_time_keyboard=True)
        await callback.message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –∫–ª—É–± –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞:", reply_markup=markup)
        await state.set_state(ProfileChange.club)
    else:
        await callback.message.answer("–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É")
        await state.set_state(ProfileChange.pfp)


@profile.message(ProfileChange.nick)
async def profile_update_nick(message: Message, state: FSMContext):
    await state.clear()
    async with asession() as session:
        profile_info = await session.get(UsersTable, message.from_user.id)
        profile_info.nick = message.text
        await session.commit()
    markup = InlineKeyboardMarkup(inline_keyboard=[[
        InlineKeyboardButton(text="üìå–ú–µ–Ω—é", callback_data="menu"),
        InlineKeyboardButton(text="üîë–ü—Ä–æ—Ñ–∏–ª—å", callback_data="profile_show")
    ]])
    await message.answer("üéâ–£—Å–ø–µ—à–Ω–æ", reply_markup=markup)
    await main_menu(message)


@profile.message(ProfileChange.club)
async def profile_update_club(message: Message, state: FSMContext):
    await state.clear()
    async with asession() as session:
        profile_info = await session.get(UsersTable, message.from_user.id)
        profile_info.club = message.text
        await session.commit()
    await message.answer("üéâ–£—Å–ø–µ—à–Ω–æ")
    await main_menu(message)


@profile.message(ProfileChange.pfp)
async def profile_update_pfp(message: Message, state: FSMContext):
    if not message.photo:
        await message.answer("‚ùå–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –Ω–µ —Ñ–æ—Ç–æ! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ—â—ë —Ä–∞–∑")
        return
    await state.clear()
    async with asession() as session:
        profile_info = await session.get(UsersTable, message.from_user.id)
        profile_info.pfp = message.photo[-1].file_id
        await session.commit()
    await message.answer("üéâ–£—Å–ø–µ—à–Ω–æ")
    await main_menu(message)
